name: Sync and Build

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

env:
  TARGET_REPOSITORY: dbt1/neutrino-settings

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PUBLISH_TOKEN: ${{ secrets.PAT_PUSH_NEUTRINO_SETTINGS != '' && secrets.PAT_PUSH_NEUTRINO_SETTINGS || secrets.ENV_GLOBAL != '' && secrets.ENV_GLOBAL || vars.ENV_GLOBAL }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install toolchain
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -e . --no-deps
      - name: QA pipeline
        run: |
          make qa

      - name: Aggregate QA report
        if: always()
        run: |
          if find out -name qa_report.md -print -quit; then
            find out -name qa_report.md -print0 | xargs -0 cat > qa_report.md
          else
            echo "No QA reports generated" > qa_report.md
          fi

      - name: Package outputs
        run: |
          python scripts/package_outputs.py out publish

      - name: Upload artefacts
        uses: actions/upload-artifact@v5
        with:
          name: settings-bundles
          path: publish/releases/*/*
          if-no-files-found: error

      - name: Upload QA report
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: qa-report
          path: |
            qa_report.md
            out/**/BUILDINFO.json

      - name: Create issue on QA fail
        if: failure()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "QA failure: empty or low-quality outputs"
          content-filepath: qa_report.md
          labels: bug, QA

      - name: Ensure publish token present
        run: |
          if [ -z "${PUBLISH_TOKEN:-}" ]; then
            echo "Publish token not configured. Set PAT_PUSH_NEUTRINO_SETTINGS or ENV_GLOBAL (secret or variable)." >&2
            exit 1
          fi

      - name: Checkout target repository
        if: ${{ env.PUBLISH_TOKEN != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPOSITORY }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: target

      - name: Sync generated bundles
        if: ${{ env.PUBLISH_TOKEN != '' }}
        run: |
          set -euo pipefail
          echo "Preparing publish payload for ${TARGET_REPOSITORY}"
          mkdir -p target/releases
          rsync -av --delete publish/releases/ target/releases/
          if [ -d publish/generated ]; then
            mkdir -p target/generated
            rsync -av --delete publish/generated/ target/generated/
          fi
          python scripts/generate_target_readme.py publish target
          cd target
          echo "Active remotes:"
          git remote -v
          git config user.name "Thilo Graf"
          git config user.email "dbt@novatux.de"
          git status --short
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit."
            exit 0
          fi
          git add --all
          git commit -m "ci: nightly settings update"
          git status --short
          echo "Pushing updates to ${TARGET_REPOSITORY}"
          git push origin HEAD
