name: Sync and Build

on:
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

env:
  TARGET_REPOSITORY: dbt1/neutrino-settings

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENV_GLOBAL: ${{ secrets.ENV_GLOBAL }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install toolchain
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -e . --no-deps

      - name: Ingest sources
        run: |
          mkdir -p work/ingest
          e2neutrino ingest --config examples/sources.example.yml --out work/ingest --cache "${RUNNER_TEMP}/e2n-cache"

      - name: Discover profiles
        id: find
        run: |
          python <<'PY'
          import json
          import os
          from pathlib import Path

          base = Path("work/ingest")
          profiles = [str(path) for path in base.glob("*/*/enigma2") if path.is_dir()]
          if not profiles:
              raise SystemExit("No profiles discovered; verify ingest configuration.")
          output = Path(os.environ["GITHUB_OUTPUT"])
          with output.open("a", encoding="utf-8") as fh:
              fh.write(f"list={json.dumps(profiles)}\n")
          PY
        shell: bash

      - name: Convert profiles
        env:
          PROFILE_LIST: ${{ steps.find.outputs.list }}
        run: |
          set -euo pipefail
          mkdir -p out
          python <<'PY'
          import json
          import os
          import shutil
          from pathlib import Path
          from subprocess import run

          profiles = json.loads(os.environ["PROFILE_LIST"])
          for profile in profiles:
              profile_path = Path(profile)
              src_id = profile_path.parents[1].name
              prof_id = profile_path.parent.name
              out_dir = Path("out") / src_id / prof_id / "ALL"
              out_dir.parent.mkdir(parents=True, exist_ok=True)
              args = [
                  "e2neutrino",
                  "convert",
                  "--input",
                  str(profile_path),
                  "--output",
                  str(out_dir),
                  "--api-version",
                  "4",
              ]
              result = run(args, check=False)
              if result.returncode != 0:
                  raise SystemExit(result.returncode)
              buildinfo = profile_path.parent / "BUILDINFO.json"
              if buildinfo.exists():
                  shutil.copy2(buildinfo, out_dir.parent / "BUILDINFO.json")
          PY

      - name: Package outputs
        run: |
          python scripts/package_outputs.py out publish

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: settings-bundles
          path: publish/releases/*/*
          if-no-files-found: error

      - name: Checkout target repository
        if: ${{ env.ENV_GLOBAL != '' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPOSITORY }}
          token: ${{ env.ENV_GLOBAL }}
          path: target

      - name: Sync generated bundles
        if: ${{ env.ENV_GLOBAL != '' }}
        run: |
          set -euo pipefail
          mkdir -p target/releases
          rsync -av --delete publish/releases/ target/releases/
          if [ -d publish/generated ]; then
            mkdir -p target/generated
            rsync -av --delete publish/generated/ target/generated/
          fi
          cd target
          git config user.name "Thilo Graf"
          git config user.email "dbt@novatux.de"
          git status
          if git diff --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git add .
          git commit -m "ci: nightly settings update"
          git push origin HEAD
